@model Expense_Tracker_WebApp.Models.Project

@{
    ViewData["Title"] = Model.ProjectId == 0 ? "Create a new project" : "Edit project";
}

<div class="row">
    <div class="col-md-7">
        <div class="widget p-5" style="background-color:#212b36">
            <form asp-action="Edit" method="post">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" name="Id" value="@Model.ProjectId" />

                <div class="mb-3">
                    <ejs-textbox id="Name" placeholder="Project Name" ejs-for="Name" floatLabelType="Always"></ejs-textbox>
                    <span asp-validation-for="Name" class="text-danger fs-6"></span>
                </div>

                <div class="mb-3">
                    <ejs-textbox id="bidSearch" placeholder="Search Bid by Link" floatLabelType="Always"></ejs-textbox>
                    <ejs-button id="searchBtn" content="Search" type="button" cssClass="e-info" onclick="searchBids()"></ejs-button>
                </div>

                <div class="mb-3">
                    <label asp-for="BidId" class="form-label text-white">Select Bid</label>
                    <select id="bidSelect" asp-for="BidId" class="form-select">
                        <option value="">Select a bid</option>
                    </select>
                    <span asp-validation-for="BidId" class="text-danger fs-6"></span>
                </div>

                <ejs-button id="submit" type="submit" content="Save" cssClass="e-success"></ejs-button>
            </form>
        </div>
    </div>

    <div class="col-md-5">
        <div class="widget h-100 d-flex justify-content-center align-items-center">
            <i class="fa-solid fa-shapes fa-2xl text-white"></i>
        </div>
    </div>
</div>

<div class="mt-3">
    <a asp-action="Index" class="btn btn-secondary">Back to List</a>
</div>

@section Scripts {
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            function searchBids() {
                var query = document.getElementById("bidSearch").ej2_instances[0].value;
                if (!query) {
                    alert("Please enter a search term.");
                    return;
                }
                fetch('/Projects/SearchBids?query=' + encodeURIComponent(query))
                    .then(response => response.json())
                    .then(data => {
                        var select = document.getElementById('bidSelect');
                        if (!select) {
                            console.error('Select element not found');
                            return;
                        }
                        select.innerHTML = ''; // Clear existing options
                        var defaultOption = document.createElement("option");
                        defaultOption.value = '';
                        defaultOption.text = 'Select a bid';
                        select.appendChild(defaultOption);
                        data.forEach(function (bid) {
                            var option = document.createElement("option");
                            option.value = bid.id;
                            option.text = `Link: ${bid.link}, Employee: ${bid.user}, Account: ${bid.account}`;
                            select.appendChild(option);
                        });
                    })
                    .catch(error => console.error('Error fetching bids:', error));
            }

            window.searchBids = searchBids; // Make searchBids function globally accessible
        });
    </script>
}
